/*
Cifra SSO REST API

SSO REST API for Cifra app

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package resources

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the RefreshReqDataAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RefreshReqDataAttributes{}

// RefreshReqDataAttributes struct for RefreshReqDataAttributes
type RefreshReqDataAttributes struct {
	// The refresh token to generate a new access token.
	RefreshToken string `json:"refresh_token"`
	// The device ID of the device that the refresh token was issued to. (Not factory ID)
	DeviceId string `json:"device_id"`
	// Unique identifier for the user's device.
	FactoryId string `json:"factory_id"`
	// Human-readable name for the user's device (e.g., 'iPhone 14').
	DeviceName string `json:"device_name"`
	// Operating system version of the user's device.
	OsVersion string `json:"os_version"`
}

type _RefreshReqDataAttributes RefreshReqDataAttributes

// NewRefreshReqDataAttributes instantiates a new RefreshReqDataAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRefreshReqDataAttributes(refreshToken string, deviceId string, factoryId string, deviceName string, osVersion string) *RefreshReqDataAttributes {
	this := RefreshReqDataAttributes{}
	this.RefreshToken = refreshToken
	this.DeviceId = deviceId
	this.FactoryId = factoryId
	this.DeviceName = deviceName
	this.OsVersion = osVersion
	return &this
}

// NewRefreshReqDataAttributesWithDefaults instantiates a new RefreshReqDataAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRefreshReqDataAttributesWithDefaults() *RefreshReqDataAttributes {
	this := RefreshReqDataAttributes{}
	return &this
}

// GetRefreshToken returns the RefreshToken field value
func (o *RefreshReqDataAttributes) GetRefreshToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RefreshToken
}

// GetRefreshTokenOk returns a tuple with the RefreshToken field value
// and a boolean to check if the value has been set.
func (o *RefreshReqDataAttributes) GetRefreshTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RefreshToken, true
}

// SetRefreshToken sets field value
func (o *RefreshReqDataAttributes) SetRefreshToken(v string) {
	o.RefreshToken = v
}

// GetDeviceId returns the DeviceId field value
func (o *RefreshReqDataAttributes) GetDeviceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DeviceId
}

// GetDeviceIdOk returns a tuple with the DeviceId field value
// and a boolean to check if the value has been set.
func (o *RefreshReqDataAttributes) GetDeviceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DeviceId, true
}

// SetDeviceId sets field value
func (o *RefreshReqDataAttributes) SetDeviceId(v string) {
	o.DeviceId = v
}

// GetFactoryId returns the FactoryId field value
func (o *RefreshReqDataAttributes) GetFactoryId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FactoryId
}

// GetFactoryIdOk returns a tuple with the FactoryId field value
// and a boolean to check if the value has been set.
func (o *RefreshReqDataAttributes) GetFactoryIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FactoryId, true
}

// SetFactoryId sets field value
func (o *RefreshReqDataAttributes) SetFactoryId(v string) {
	o.FactoryId = v
}

// GetDeviceName returns the DeviceName field value
func (o *RefreshReqDataAttributes) GetDeviceName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DeviceName
}

// GetDeviceNameOk returns a tuple with the DeviceName field value
// and a boolean to check if the value has been set.
func (o *RefreshReqDataAttributes) GetDeviceNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DeviceName, true
}

// SetDeviceName sets field value
func (o *RefreshReqDataAttributes) SetDeviceName(v string) {
	o.DeviceName = v
}

// GetOsVersion returns the OsVersion field value
func (o *RefreshReqDataAttributes) GetOsVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OsVersion
}

// GetOsVersionOk returns a tuple with the OsVersion field value
// and a boolean to check if the value has been set.
func (o *RefreshReqDataAttributes) GetOsVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OsVersion, true
}

// SetOsVersion sets field value
func (o *RefreshReqDataAttributes) SetOsVersion(v string) {
	o.OsVersion = v
}

func (o RefreshReqDataAttributes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RefreshReqDataAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["refresh_token"] = o.RefreshToken
	toSerialize["device_id"] = o.DeviceId
	toSerialize["factory_id"] = o.FactoryId
	toSerialize["device_name"] = o.DeviceName
	toSerialize["os_version"] = o.OsVersion
	return toSerialize, nil
}

func (o *RefreshReqDataAttributes) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"refresh_token",
		"device_id",
		"factory_id",
		"device_name",
		"os_version",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varRefreshReqDataAttributes := _RefreshReqDataAttributes{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varRefreshReqDataAttributes)

	if err != nil {
		return err
	}

	*o = RefreshReqDataAttributes(varRefreshReqDataAttributes)

	return err
}

type NullableRefreshReqDataAttributes struct {
	value *RefreshReqDataAttributes
	isSet bool
}

func (v NullableRefreshReqDataAttributes) Get() *RefreshReqDataAttributes {
	return v.value
}

func (v *NullableRefreshReqDataAttributes) Set(val *RefreshReqDataAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableRefreshReqDataAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableRefreshReqDataAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRefreshReqDataAttributes(val *RefreshReqDataAttributes) *NullableRefreshReqDataAttributes {
	return &NullableRefreshReqDataAttributes{value: val, isSet: true}
}

func (v NullableRefreshReqDataAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRefreshReqDataAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


