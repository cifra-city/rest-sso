/*
Example API

This is a sample API.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package resources

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ApproveOperationReqDataAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApproveOperationReqDataAttributes{}

// ApproveOperationReqDataAttributes struct for ApproveOperationReqDataAttributes
type ApproveOperationReqDataAttributes struct {
	// New email
	Email string `json:"email"`
	// User code
	Code string `json:"code"`
	// Type of operation
	Operation string `json:"operation"`
}

type _ApproveOperationReqDataAttributes ApproveOperationReqDataAttributes

// NewApproveOperationReqDataAttributes instantiates a new ApproveOperationReqDataAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApproveOperationReqDataAttributes(email string, code string, operation string) *ApproveOperationReqDataAttributes {
	this := ApproveOperationReqDataAttributes{}
	this.Email = email
	this.Code = code
	this.Operation = operation
	return &this
}

// NewApproveOperationReqDataAttributesWithDefaults instantiates a new ApproveOperationReqDataAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApproveOperationReqDataAttributesWithDefaults() *ApproveOperationReqDataAttributes {
	this := ApproveOperationReqDataAttributes{}
	return &this
}

// GetEmail returns the Email field value
func (o *ApproveOperationReqDataAttributes) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *ApproveOperationReqDataAttributes) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *ApproveOperationReqDataAttributes) SetEmail(v string) {
	o.Email = v
}

// GetCode returns the Code field value
func (o *ApproveOperationReqDataAttributes) GetCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Code
}

// GetCodeOk returns a tuple with the Code field value
// and a boolean to check if the value has been set.
func (o *ApproveOperationReqDataAttributes) GetCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Code, true
}

// SetCode sets field value
func (o *ApproveOperationReqDataAttributes) SetCode(v string) {
	o.Code = v
}

// GetOperation returns the Operation field value
func (o *ApproveOperationReqDataAttributes) GetOperation() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Operation
}

// GetOperationOk returns a tuple with the Operation field value
// and a boolean to check if the value has been set.
func (o *ApproveOperationReqDataAttributes) GetOperationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Operation, true
}

// SetOperation sets field value
func (o *ApproveOperationReqDataAttributes) SetOperation(v string) {
	o.Operation = v
}

func (o ApproveOperationReqDataAttributes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApproveOperationReqDataAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["email"] = o.Email
	toSerialize["code"] = o.Code
	toSerialize["operation"] = o.Operation
	return toSerialize, nil
}

func (o *ApproveOperationReqDataAttributes) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"email",
		"code",
		"operation",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varApproveOperationReqDataAttributes := _ApproveOperationReqDataAttributes{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varApproveOperationReqDataAttributes)

	if err != nil {
		return err
	}

	*o = ApproveOperationReqDataAttributes(varApproveOperationReqDataAttributes)

	return err
}

type NullableApproveOperationReqDataAttributes struct {
	value *ApproveOperationReqDataAttributes
	isSet bool
}

func (v NullableApproveOperationReqDataAttributes) Get() *ApproveOperationReqDataAttributes {
	return v.value
}

func (v *NullableApproveOperationReqDataAttributes) Set(val *ApproveOperationReqDataAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableApproveOperationReqDataAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableApproveOperationReqDataAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApproveOperationReqDataAttributes(val *ApproveOperationReqDataAttributes) *NullableApproveOperationReqDataAttributes {
	return &NullableApproveOperationReqDataAttributes{value: val, isSet: true}
}

func (v NullableApproveOperationReqDataAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApproveOperationReqDataAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


