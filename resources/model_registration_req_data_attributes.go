/*
Example API

This is a sample API.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package resources

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the RegistrationReqDataAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RegistrationReqDataAttributes{}

// RegistrationReqDataAttributes struct for RegistrationReqDataAttributes
type RegistrationReqDataAttributes struct {
	// User email
	Email string `json:"email"`
	// User username
	Username *string `json:"username,omitempty"`
}

type _RegistrationReqDataAttributes RegistrationReqDataAttributes

// NewRegistrationReqDataAttributes instantiates a new RegistrationReqDataAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRegistrationReqDataAttributes(email string) *RegistrationReqDataAttributes {
	this := RegistrationReqDataAttributes{}
	this.Email = email
	return &this
}

// NewRegistrationReqDataAttributesWithDefaults instantiates a new RegistrationReqDataAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRegistrationReqDataAttributesWithDefaults() *RegistrationReqDataAttributes {
	this := RegistrationReqDataAttributes{}
	return &this
}

// GetEmail returns the Email field value
func (o *RegistrationReqDataAttributes) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *RegistrationReqDataAttributes) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *RegistrationReqDataAttributes) SetEmail(v string) {
	o.Email = v
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *RegistrationReqDataAttributes) GetUsername() string {
	if o == nil || IsNil(o.Username) {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegistrationReqDataAttributes) GetUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.Username) {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *RegistrationReqDataAttributes) HasUsername() bool {
	if o != nil && !IsNil(o.Username) {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *RegistrationReqDataAttributes) SetUsername(v string) {
	o.Username = &v
}

func (o RegistrationReqDataAttributes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RegistrationReqDataAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["email"] = o.Email
	if !IsNil(o.Username) {
		toSerialize["username"] = o.Username
	}
	return toSerialize, nil
}

func (o *RegistrationReqDataAttributes) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"email",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varRegistrationReqDataAttributes := _RegistrationReqDataAttributes{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varRegistrationReqDataAttributes)

	if err != nil {
		return err
	}

	*o = RegistrationReqDataAttributes(varRegistrationReqDataAttributes)

	return err
}

type NullableRegistrationReqDataAttributes struct {
	value *RegistrationReqDataAttributes
	isSet bool
}

func (v NullableRegistrationReqDataAttributes) Get() *RegistrationReqDataAttributes {
	return v.value
}

func (v *NullableRegistrationReqDataAttributes) Set(val *RegistrationReqDataAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableRegistrationReqDataAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableRegistrationReqDataAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRegistrationReqDataAttributes(val *RegistrationReqDataAttributes) *NullableRegistrationReqDataAttributes {
	return &NullableRegistrationReqDataAttributes{value: val, isSet: true}
}

func (v NullableRegistrationReqDataAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRegistrationReqDataAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


