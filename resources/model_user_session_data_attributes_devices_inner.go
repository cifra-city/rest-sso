/*
Cifra SSO REST API

SSO REST API for Cifra app

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package resources

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the UserSessionDataAttributesDevicesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UserSessionDataAttributesDevicesInner{}

// UserSessionDataAttributesDevicesInner struct for UserSessionDataAttributesDevicesInner
type UserSessionDataAttributesDevicesInner struct {
	// session id
	Id string `json:"id"`
	// device name
	DeviceName string `json:"device_name"`
	// client name and version
	Client string `json:"client"`
	// location
	Location string `json:"location"`
	// last used date
	LastUsed time.Time `json:"last_used"`
}

type _UserSessionDataAttributesDevicesInner UserSessionDataAttributesDevicesInner

// NewUserSessionDataAttributesDevicesInner instantiates a new UserSessionDataAttributesDevicesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserSessionDataAttributesDevicesInner(id string, deviceName string, client string, location string, lastUsed time.Time) *UserSessionDataAttributesDevicesInner {
	this := UserSessionDataAttributesDevicesInner{}
	this.Id = id
	this.DeviceName = deviceName
	this.Client = client
	this.Location = location
	this.LastUsed = lastUsed
	return &this
}

// NewUserSessionDataAttributesDevicesInnerWithDefaults instantiates a new UserSessionDataAttributesDevicesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserSessionDataAttributesDevicesInnerWithDefaults() *UserSessionDataAttributesDevicesInner {
	this := UserSessionDataAttributesDevicesInner{}
	return &this
}

// GetId returns the Id field value
func (o *UserSessionDataAttributesDevicesInner) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *UserSessionDataAttributesDevicesInner) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *UserSessionDataAttributesDevicesInner) SetId(v string) {
	o.Id = v
}

// GetDeviceName returns the DeviceName field value
func (o *UserSessionDataAttributesDevicesInner) GetDeviceName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DeviceName
}

// GetDeviceNameOk returns a tuple with the DeviceName field value
// and a boolean to check if the value has been set.
func (o *UserSessionDataAttributesDevicesInner) GetDeviceNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DeviceName, true
}

// SetDeviceName sets field value
func (o *UserSessionDataAttributesDevicesInner) SetDeviceName(v string) {
	o.DeviceName = v
}

// GetClient returns the Client field value
func (o *UserSessionDataAttributesDevicesInner) GetClient() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Client
}

// GetClientOk returns a tuple with the Client field value
// and a boolean to check if the value has been set.
func (o *UserSessionDataAttributesDevicesInner) GetClientOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Client, true
}

// SetClient sets field value
func (o *UserSessionDataAttributesDevicesInner) SetClient(v string) {
	o.Client = v
}

// GetLocation returns the Location field value
func (o *UserSessionDataAttributesDevicesInner) GetLocation() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Location
}

// GetLocationOk returns a tuple with the Location field value
// and a boolean to check if the value has been set.
func (o *UserSessionDataAttributesDevicesInner) GetLocationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Location, true
}

// SetLocation sets field value
func (o *UserSessionDataAttributesDevicesInner) SetLocation(v string) {
	o.Location = v
}

// GetLastUsed returns the LastUsed field value
func (o *UserSessionDataAttributesDevicesInner) GetLastUsed() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.LastUsed
}

// GetLastUsedOk returns a tuple with the LastUsed field value
// and a boolean to check if the value has been set.
func (o *UserSessionDataAttributesDevicesInner) GetLastUsedOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastUsed, true
}

// SetLastUsed sets field value
func (o *UserSessionDataAttributesDevicesInner) SetLastUsed(v time.Time) {
	o.LastUsed = v
}

func (o UserSessionDataAttributesDevicesInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UserSessionDataAttributesDevicesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["device_name"] = o.DeviceName
	toSerialize["client"] = o.Client
	toSerialize["location"] = o.Location
	toSerialize["last_used"] = o.LastUsed
	return toSerialize, nil
}

func (o *UserSessionDataAttributesDevicesInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"device_name",
		"client",
		"location",
		"last_used",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUserSessionDataAttributesDevicesInner := _UserSessionDataAttributesDevicesInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varUserSessionDataAttributesDevicesInner)

	if err != nil {
		return err
	}

	*o = UserSessionDataAttributesDevicesInner(varUserSessionDataAttributesDevicesInner)

	return err
}

type NullableUserSessionDataAttributesDevicesInner struct {
	value *UserSessionDataAttributesDevicesInner
	isSet bool
}

func (v NullableUserSessionDataAttributesDevicesInner) Get() *UserSessionDataAttributesDevicesInner {
	return v.value
}

func (v *NullableUserSessionDataAttributesDevicesInner) Set(val *UserSessionDataAttributesDevicesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableUserSessionDataAttributesDevicesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableUserSessionDataAttributesDevicesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserSessionDataAttributesDevicesInner(val *UserSessionDataAttributesDevicesInner) *NullableUserSessionDataAttributesDevicesInner {
	return &NullableUserSessionDataAttributesDevicesInner{value: val, isSet: true}
}

func (v NullableUserSessionDataAttributesDevicesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserSessionDataAttributesDevicesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


